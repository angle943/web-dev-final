.backdrop {
  background-color: rgb(var(--gray-900));

  &--light-mode {
    background-color: unset;
  }
}

// https://codepen.io/studiojvla/pen/qVbQqW
.container {
  overflow: hidden;
  position: relative;
  padding-top: 3rem;
  padding-bottom: 4rem;

  @media only screen and (max-width: 80rem) {
    padding-top: 2rem;
    padding-bottom: 3rem;
  }

  @media only screen and (max-width: 64rem) {
    padding-top: 1.5rem;
    padding-bottom: 2rem;
  }

  &::before,
  &::after {
    background: linear-gradient(
      to right,
      rgba(var(--gray-900), 1) 0%,
      rgba(var(--gray-900), 0) 100%
    );
    content: "";
    height: 100%;
    position: absolute;
    width: 4rem;
    z-index: 1;

    @media only screen and (max-width: 64rem) {
      width: 2rem;
    }
  }

  &::before {
    left: 0;
    top: 0;
  }

  &::after {
    right: 0;
    top: 0;
    transform: rotateZ(180deg);
  }

  &--light-mode {
    &::before,
    &::after {
      background: linear-gradient(
        to right,
        rgba(var(--gray-100), 1) 0%,
        rgba(var(--gray-100), 0) 100%
      );
    }
  }
}

@keyframes scroll {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(calc(-4rem * 18 - 4rem * 18));
  }
}

@keyframes scrollMd {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(calc(-3rem * 18 - 3rem * 18));
  }
}

.track {
  animation: scroll 40s linear infinite;
  display: flex;
  gap: 4rem;
  width: calc(4rem * 36 + 4rem * 35);

  @media only screen and (max-width: 64rem) {
    animation: scrollMd 40s linear infinite;
    gap: 3rem;
    width: calc(3rem * 36 + 3rem * 35);
  }
}
